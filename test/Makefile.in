# Makefile.in generated by automake 1.15 from Makefile.am.
# @configure_input@

# Copyright (C) 1994-2014 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@
VPATH = @srcdir@
am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
check_PROGRAMS = test_coverage$(EXEEXT) test_palette$(EXEEXT) \
	test_section$(EXEEXT) test_raster$(EXEEXT) test_mask$(EXEEXT) \
	test_webp$(EXEEXT) test_gif$(EXEEXT) test1$(EXEEXT) \
	test2$(EXEEXT) test3$(EXEEXT) test4$(EXEEXT) test5$(EXEEXT) \
	test6$(EXEEXT) test7$(EXEEXT) test8$(EXEEXT) test9$(EXEEXT) \
	test10$(EXEEXT) test11$(EXEEXT) test12$(EXEEXT) \
	test13$(EXEEXT) test14$(EXEEXT) test15$(EXEEXT) \
	test16$(EXEEXT) test17$(EXEEXT) test18$(EXEEXT) \
	test19$(EXEEXT) test20$(EXEEXT) test_tifin$(EXEEXT) \
	test_wr_tiff$(EXEEXT) test_wms1$(EXEEXT) test_wms2$(EXEEXT) \
	test_paint$(EXEEXT) check_sql_stmt$(EXEEXT) \
	test_map_nile_8$(EXEEXT) test_map_nile_u8$(EXEEXT) \
	test_map_nile_u16$(EXEEXT) test_map_nile_32$(EXEEXT) \
	test_map_nile_u32$(EXEEXT) test_map_nile_flt$(EXEEXT) \
	test_map_nile_dbl$(EXEEXT) test_map_ascii$(EXEEXT) \
	test_map_rgb$(EXEEXT) test_map_gray$(EXEEXT) \
	test_map_srtm$(EXEEXT) test_map_mono$(EXEEXT) \
	test_map_indiana$(EXEEXT) test_load_wms$(EXEEXT) \
	test_map_noref$(EXEEXT) test_map_trento$(EXEEXT) \
	test_map_trieste$(EXEEXT) test_map_infrared$(EXEEXT) \
	test_map_orbetello$(EXEEXT) test_raster_symbolizer$(EXEEXT) \
	test_svg$(EXEEXT) test_raw$(EXEEXT) test_openjpeg$(EXEEXT) \
	test_line_symbolizer$(EXEEXT) test_polygon_symbolizer$(EXEEXT) \
	test_point_symbolizer$(EXEEXT) test_text_symbolizer$(EXEEXT) \
	test_vectors$(EXEEXT) test_font$(EXEEXT) \
	test_copy_rastercov$(EXEEXT)
subdir = test
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/libtool.m4 \
	$(top_srcdir)/m4/ltoptions.m4 $(top_srcdir)/m4/ltsugar.m4 \
	$(top_srcdir)/m4/ltversion.m4 $(top_srcdir)/m4/lt~obsolete.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(am__DIST_COMMON)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
check_sql_stmt_SOURCES = check_sql_stmt.c
check_sql_stmt_OBJECTS = check_sql_stmt.$(OBJEXT)
check_sql_stmt_LDADD = $(LDADD)
AM_V_lt = $(am__v_lt_@AM_V@)
am__v_lt_ = $(am__v_lt_@AM_DEFAULT_V@)
am__v_lt_0 = --silent
am__v_lt_1 = 
test1_SOURCES = test1.c
test1_OBJECTS = test1.$(OBJEXT)
test1_LDADD = $(LDADD)
test10_SOURCES = test10.c
test10_OBJECTS = test10.$(OBJEXT)
test10_LDADD = $(LDADD)
test11_SOURCES = test11.c
test11_OBJECTS = test11.$(OBJEXT)
test11_LDADD = $(LDADD)
test12_SOURCES = test12.c
test12_OBJECTS = test12.$(OBJEXT)
test12_LDADD = $(LDADD)
test13_SOURCES = test13.c
test13_OBJECTS = test13.$(OBJEXT)
test13_LDADD = $(LDADD)
test14_SOURCES = test14.c
test14_OBJECTS = test14.$(OBJEXT)
test14_LDADD = $(LDADD)
test15_SOURCES = test15.c
test15_OBJECTS = test15.$(OBJEXT)
test15_LDADD = $(LDADD)
test16_SOURCES = test16.c
test16_OBJECTS = test16.$(OBJEXT)
test16_LDADD = $(LDADD)
test17_SOURCES = test17.c
test17_OBJECTS = test17.$(OBJEXT)
test17_LDADD = $(LDADD)
test18_SOURCES = test18.c
test18_OBJECTS = test18.$(OBJEXT)
test18_LDADD = $(LDADD)
test19_SOURCES = test19.c
test19_OBJECTS = test19.$(OBJEXT)
test19_LDADD = $(LDADD)
test2_SOURCES = test2.c
test2_OBJECTS = test2.$(OBJEXT)
test2_LDADD = $(LDADD)
test20_SOURCES = test20.c
test20_OBJECTS = test20.$(OBJEXT)
test20_LDADD = $(LDADD)
test3_SOURCES = test3.c
test3_OBJECTS = test3.$(OBJEXT)
test3_LDADD = $(LDADD)
test4_SOURCES = test4.c
test4_OBJECTS = test4.$(OBJEXT)
test4_LDADD = $(LDADD)
test5_SOURCES = test5.c
test5_OBJECTS = test5.$(OBJEXT)
test5_LDADD = $(LDADD)
test6_SOURCES = test6.c
test6_OBJECTS = test6.$(OBJEXT)
test6_LDADD = $(LDADD)
test7_SOURCES = test7.c
test7_OBJECTS = test7.$(OBJEXT)
test7_LDADD = $(LDADD)
test8_SOURCES = test8.c
test8_OBJECTS = test8.$(OBJEXT)
test8_LDADD = $(LDADD)
test9_SOURCES = test9.c
test9_OBJECTS = test9.$(OBJEXT)
test9_LDADD = $(LDADD)
test_copy_rastercov_SOURCES = test_copy_rastercov.c
test_copy_rastercov_OBJECTS = test_copy_rastercov.$(OBJEXT)
test_copy_rastercov_LDADD = $(LDADD)
test_coverage_SOURCES = test_coverage.c
test_coverage_OBJECTS = test_coverage.$(OBJEXT)
test_coverage_LDADD = $(LDADD)
test_font_SOURCES = test_font.c
test_font_OBJECTS = test_font.$(OBJEXT)
test_font_LDADD = $(LDADD)
test_gif_SOURCES = test_gif.c
test_gif_OBJECTS = test_gif.$(OBJEXT)
test_gif_LDADD = $(LDADD)
test_line_symbolizer_SOURCES = test_line_symbolizer.c
test_line_symbolizer_OBJECTS = test_line_symbolizer.$(OBJEXT)
test_line_symbolizer_LDADD = $(LDADD)
test_load_wms_SOURCES = test_load_wms.c
test_load_wms_OBJECTS = test_load_wms.$(OBJEXT)
test_load_wms_LDADD = $(LDADD)
test_map_ascii_SOURCES = test_map_ascii.c
test_map_ascii_OBJECTS = test_map_ascii.$(OBJEXT)
test_map_ascii_LDADD = $(LDADD)
test_map_gray_SOURCES = test_map_gray.c
test_map_gray_OBJECTS = test_map_gray.$(OBJEXT)
test_map_gray_LDADD = $(LDADD)
test_map_indiana_SOURCES = test_map_indiana.c
test_map_indiana_OBJECTS = test_map_indiana.$(OBJEXT)
test_map_indiana_LDADD = $(LDADD)
test_map_infrared_SOURCES = test_map_infrared.c
test_map_infrared_OBJECTS = test_map_infrared.$(OBJEXT)
test_map_infrared_LDADD = $(LDADD)
test_map_mono_SOURCES = test_map_mono.c
test_map_mono_OBJECTS = test_map_mono.$(OBJEXT)
test_map_mono_LDADD = $(LDADD)
test_map_nile_32_SOURCES = test_map_nile_32.c
test_map_nile_32_OBJECTS = test_map_nile_32.$(OBJEXT)
test_map_nile_32_LDADD = $(LDADD)
test_map_nile_8_SOURCES = test_map_nile_8.c
test_map_nile_8_OBJECTS = test_map_nile_8.$(OBJEXT)
test_map_nile_8_LDADD = $(LDADD)
test_map_nile_dbl_SOURCES = test_map_nile_dbl.c
test_map_nile_dbl_OBJECTS = test_map_nile_dbl.$(OBJEXT)
test_map_nile_dbl_LDADD = $(LDADD)
test_map_nile_flt_SOURCES = test_map_nile_flt.c
test_map_nile_flt_OBJECTS = test_map_nile_flt.$(OBJEXT)
test_map_nile_flt_LDADD = $(LDADD)
test_map_nile_u16_SOURCES = test_map_nile_u16.c
test_map_nile_u16_OBJECTS = test_map_nile_u16.$(OBJEXT)
test_map_nile_u16_LDADD = $(LDADD)
test_map_nile_u32_SOURCES = test_map_nile_u32.c
test_map_nile_u32_OBJECTS = test_map_nile_u32.$(OBJEXT)
test_map_nile_u32_LDADD = $(LDADD)
test_map_nile_u8_SOURCES = test_map_nile_u8.c
test_map_nile_u8_OBJECTS = test_map_nile_u8.$(OBJEXT)
test_map_nile_u8_LDADD = $(LDADD)
test_map_noref_SOURCES = test_map_noref.c
test_map_noref_OBJECTS = test_map_noref.$(OBJEXT)
test_map_noref_LDADD = $(LDADD)
test_map_orbetello_SOURCES = test_map_orbetello.c
test_map_orbetello_OBJECTS = test_map_orbetello.$(OBJEXT)
test_map_orbetello_LDADD = $(LDADD)
test_map_rgb_SOURCES = test_map_rgb.c
test_map_rgb_OBJECTS = test_map_rgb.$(OBJEXT)
test_map_rgb_LDADD = $(LDADD)
test_map_srtm_SOURCES = test_map_srtm.c
test_map_srtm_OBJECTS = test_map_srtm.$(OBJEXT)
test_map_srtm_LDADD = $(LDADD)
test_map_trento_SOURCES = test_map_trento.c
test_map_trento_OBJECTS = test_map_trento.$(OBJEXT)
test_map_trento_LDADD = $(LDADD)
test_map_trieste_SOURCES = test_map_trieste.c
test_map_trieste_OBJECTS = test_map_trieste.$(OBJEXT)
test_map_trieste_LDADD = $(LDADD)
test_mask_SOURCES = test_mask.c
test_mask_OBJECTS = test_mask.$(OBJEXT)
test_mask_LDADD = $(LDADD)
test_openjpeg_SOURCES = test_openjpeg.c
test_openjpeg_OBJECTS = test_openjpeg.$(OBJEXT)
test_openjpeg_LDADD = $(LDADD)
test_paint_SOURCES = test_paint.c
test_paint_OBJECTS = test_paint.$(OBJEXT)
test_paint_LDADD = $(LDADD)
test_palette_SOURCES = test_palette.c
test_palette_OBJECTS = test_palette.$(OBJEXT)
test_palette_LDADD = $(LDADD)
test_point_symbolizer_SOURCES = test_point_symbolizer.c
test_point_symbolizer_OBJECTS = test_point_symbolizer.$(OBJEXT)
test_point_symbolizer_LDADD = $(LDADD)
test_polygon_symbolizer_SOURCES = test_polygon_symbolizer.c
test_polygon_symbolizer_OBJECTS = test_polygon_symbolizer.$(OBJEXT)
test_polygon_symbolizer_LDADD = $(LDADD)
test_raster_SOURCES = test_raster.c
test_raster_OBJECTS = test_raster.$(OBJEXT)
test_raster_LDADD = $(LDADD)
test_raster_symbolizer_SOURCES = test_raster_symbolizer.c
test_raster_symbolizer_OBJECTS = test_raster_symbolizer.$(OBJEXT)
test_raster_symbolizer_LDADD = $(LDADD)
test_raw_SOURCES = test_raw.c
test_raw_OBJECTS = test_raw.$(OBJEXT)
test_raw_LDADD = $(LDADD)
test_section_SOURCES = test_section.c
test_section_OBJECTS = test_section.$(OBJEXT)
test_section_LDADD = $(LDADD)
test_svg_SOURCES = test_svg.c
test_svg_OBJECTS = test_svg.$(OBJEXT)
test_svg_LDADD = $(LDADD)
test_text_symbolizer_SOURCES = test_text_symbolizer.c
test_text_symbolizer_OBJECTS = test_text_symbolizer.$(OBJEXT)
test_text_symbolizer_LDADD = $(LDADD)
test_tifin_SOURCES = test_tifin.c
test_tifin_OBJECTS = test_tifin.$(OBJEXT)
test_tifin_LDADD = $(LDADD)
test_vectors_SOURCES = test_vectors.c
test_vectors_OBJECTS = test_vectors.$(OBJEXT)
test_vectors_LDADD = $(LDADD)
test_webp_SOURCES = test_webp.c
test_webp_OBJECTS = test_webp.$(OBJEXT)
test_webp_LDADD = $(LDADD)
test_wms1_SOURCES = test_wms1.c
test_wms1_OBJECTS = test_wms1.$(OBJEXT)
test_wms1_LDADD = $(LDADD)
test_wms2_SOURCES = test_wms2.c
test_wms2_OBJECTS = test_wms2.$(OBJEXT)
test_wms2_LDADD = $(LDADD)
test_wr_tiff_SOURCES = test_wr_tiff.c
test_wr_tiff_OBJECTS = test_wr_tiff.$(OBJEXT)
test_wr_tiff_LDADD = $(LDADD)
AM_V_P = $(am__v_P_@AM_V@)
am__v_P_ = $(am__v_P_@AM_DEFAULT_V@)
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_@AM_V@)
am__v_GEN_ = $(am__v_GEN_@AM_DEFAULT_V@)
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_@AM_V@)
am__v_at_ = $(am__v_at_@AM_DEFAULT_V@)
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I.@am__isrc@ -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_@AM_V@)
am__v_CC_ = $(am__v_CC_@AM_DEFAULT_V@)
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_@AM_V@)
am__v_CCLD_ = $(am__v_CCLD_@AM_DEFAULT_V@)
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
SOURCES = check_sql_stmt.c test1.c test10.c test11.c test12.c test13.c \
	test14.c test15.c test16.c test17.c test18.c test19.c test2.c \
	test20.c test3.c test4.c test5.c test6.c test7.c test8.c \
	test9.c test_copy_rastercov.c test_coverage.c test_font.c \
	test_gif.c test_line_symbolizer.c test_load_wms.c \
	test_map_ascii.c test_map_gray.c test_map_indiana.c \
	test_map_infrared.c test_map_mono.c test_map_nile_32.c \
	test_map_nile_8.c test_map_nile_dbl.c test_map_nile_flt.c \
	test_map_nile_u16.c test_map_nile_u32.c test_map_nile_u8.c \
	test_map_noref.c test_map_orbetello.c test_map_rgb.c \
	test_map_srtm.c test_map_trento.c test_map_trieste.c \
	test_mask.c test_openjpeg.c test_paint.c test_palette.c \
	test_point_symbolizer.c test_polygon_symbolizer.c \
	test_raster.c test_raster_symbolizer.c test_raw.c \
	test_section.c test_svg.c test_text_symbolizer.c test_tifin.c \
	test_vectors.c test_webp.c test_wms1.c test_wms2.c \
	test_wr_tiff.c
DIST_SOURCES = check_sql_stmt.c test1.c test10.c test11.c test12.c \
	test13.c test14.c test15.c test16.c test17.c test18.c test19.c \
	test2.c test20.c test3.c test4.c test5.c test6.c test7.c \
	test8.c test9.c test_copy_rastercov.c test_coverage.c \
	test_font.c test_gif.c test_line_symbolizer.c test_load_wms.c \
	test_map_ascii.c test_map_gray.c test_map_indiana.c \
	test_map_infrared.c test_map_mono.c test_map_nile_32.c \
	test_map_nile_8.c test_map_nile_dbl.c test_map_nile_flt.c \
	test_map_nile_u16.c test_map_nile_u32.c test_map_nile_u8.c \
	test_map_noref.c test_map_orbetello.c test_map_rgb.c \
	test_map_srtm.c test_map_trento.c test_map_trieste.c \
	test_mask.c test_openjpeg.c test_paint.c test_palette.c \
	test_point_symbolizer.c test_polygon_symbolizer.c \
	test_raster.c test_raster_symbolizer.c test_raw.c \
	test_section.c test_svg.c test_text_symbolizer.c test_tifin.c \
	test_vectors.c test_webp.c test_wms1.c test_wms2.c \
	test_wr_tiff.c
RECURSIVE_TARGETS = all-recursive check-recursive cscopelist-recursive \
	ctags-recursive dvi-recursive html-recursive info-recursive \
	install-data-recursive install-dvi-recursive \
	install-exec-recursive install-html-recursive \
	install-info-recursive install-pdf-recursive \
	install-ps-recursive install-recursive installcheck-recursive \
	installdirs-recursive pdf-recursive ps-recursive \
	tags-recursive uninstall-recursive
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
RECURSIVE_CLEAN_TARGETS = mostlyclean-recursive clean-recursive	\
  distclean-recursive maintainer-clean-recursive
am__recursive_targets = \
  $(RECURSIVE_TARGETS) \
  $(RECURSIVE_CLEAN_TARGETS) \
  $(am__extra_recursive_targets)
AM_RECURSIVE_TARGETS = $(am__recursive_targets:-recursive=) TAGS CTAGS \
	check recheck distdir
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
am__tty_colors_dummy = \
  mgn= red= grn= lgn= blu= brg= std=; \
  am__color_tests=no
am__tty_colors = { \
  $(am__tty_colors_dummy); \
  if test "X$(AM_COLOR_TESTS)" = Xno; then \
    am__color_tests=no; \
  elif test "X$(AM_COLOR_TESTS)" = Xalways; then \
    am__color_tests=yes; \
  elif test "X$$TERM" != Xdumb && { test -t 1; } 2>/dev/null; then \
    am__color_tests=yes; \
  fi; \
  if test $$am__color_tests = yes; then \
    red='[0;31m'; \
    grn='[0;32m'; \
    lgn='[1;32m'; \
    blu='[1;34m'; \
    mgn='[0;35m'; \
    brg='[1m'; \
    std='[m'; \
  fi; \
}
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
am__recheck_rx = ^[ 	]*:recheck:[ 	]*
am__global_test_result_rx = ^[ 	]*:global-test-result:[ 	]*
am__copy_in_global_log_rx = ^[ 	]*:copy-in-global-log:[ 	]*
# A command that, given a newline-separated list of test names on the
# standard input, print the name of the tests that are to be re-run
# upon "make recheck".
am__list_recheck_tests = $(AWK) '{ \
  recheck = 1; \
  while ((rc = (getline line < ($$0 ".trs"))) != 0) \
    { \
      if (rc < 0) \
        { \
          if ((getline line2 < ($$0 ".log")) < 0) \
	    recheck = 0; \
          break; \
        } \
      else if (line ~ /$(am__recheck_rx)[nN][Oo]/) \
        { \
          recheck = 0; \
          break; \
        } \
      else if (line ~ /$(am__recheck_rx)[yY][eE][sS]/) \
        { \
          break; \
        } \
    }; \
  if (recheck) \
    print $$0; \
  close ($$0 ".trs"); \
  close ($$0 ".log"); \
}'
# A command that, given a newline-separated list of test names on the
# standard input, create the global log from their .trs and .log files.
am__create_global_log = $(AWK) ' \
function fatal(msg) \
{ \
  print "fatal: making $@: " msg | "cat >&2"; \
  exit 1; \
} \
function rst_section(header) \
{ \
  print header; \
  len = length(header); \
  for (i = 1; i <= len; i = i + 1) \
    printf "="; \
  printf "\n\n"; \
} \
{ \
  copy_in_global_log = 1; \
  global_test_result = "RUN"; \
  while ((rc = (getline line < ($$0 ".trs"))) != 0) \
    { \
      if (rc < 0) \
         fatal("failed to read from " $$0 ".trs"); \
      if (line ~ /$(am__global_test_result_rx)/) \
        { \
          sub("$(am__global_test_result_rx)", "", line); \
          sub("[ 	]*$$", "", line); \
          global_test_result = line; \
        } \
      else if (line ~ /$(am__copy_in_global_log_rx)[nN][oO]/) \
        copy_in_global_log = 0; \
    }; \
  if (copy_in_global_log) \
    { \
      rst_section(global_test_result ": " $$0); \
      while ((rc = (getline line < ($$0 ".log"))) != 0) \
      { \
        if (rc < 0) \
          fatal("failed to read from " $$0 ".log"); \
        print line; \
      }; \
      printf "\n"; \
    }; \
  close ($$0 ".trs"); \
  close ($$0 ".log"); \
}'
# Restructured Text title.
am__rst_title = { sed 's/.*/   &   /;h;s/./=/g;p;x;s/ *$$//;p;g' && echo; }
# Solaris 10 'make', and several other traditional 'make' implementations,
# pass "-e" to $(SHELL), and POSIX 2008 even requires this.  Work around it
# by disabling -e (using the XSI extension "set +e") if it's set.
am__sh_e_setup = case $$- in *e*) set +e;; esac
# Default flags passed to test drivers.
am__common_driver_flags = \
  --color-tests "$$am__color_tests" \
  --enable-hard-errors "$$am__enable_hard_errors" \
  --expect-failure "$$am__expect_failure"
# To be inserted before the command running the test.  Creates the
# directory for the log if needed.  Stores in $dir the directory
# containing $f, in $tst the test, in $log the log.  Executes the
# developer- defined test setup AM_TESTS_ENVIRONMENT (if any), and
# passes TESTS_ENVIRONMENT.  Set up options for the wrapper that
# will run the test scripts (or their associated LOG_COMPILER, if
# thy have one).
am__check_pre = \
$(am__sh_e_setup);					\
$(am__vpath_adj_setup) $(am__vpath_adj)			\
$(am__tty_colors);					\
srcdir=$(srcdir); export srcdir;			\
case "$@" in						\
  */*) am__odir=`echo "./$@" | sed 's|/[^/]*$$||'`;;	\
    *) am__odir=.;; 					\
esac;							\
test "x$$am__odir" = x"." || test -d "$$am__odir" 	\
  || $(MKDIR_P) "$$am__odir" || exit $$?;		\
if test -f "./$$f"; then dir=./;			\
elif test -f "$$f"; then dir=;				\
else dir="$(srcdir)/"; fi;				\
tst=$$dir$$f; log='$@'; 				\
if test -n '$(DISABLE_HARD_ERRORS)'; then		\
  am__enable_hard_errors=no; 				\
else							\
  am__enable_hard_errors=yes; 				\
fi; 							\
case " $(XFAIL_TESTS) " in				\
  *[\ \	]$$f[\ \	]* | *[\ \	]$$dir$$f[\ \	]*) \
    am__expect_failure=yes;;				\
  *)							\
    am__expect_failure=no;;				\
esac; 							\
$(AM_TESTS_ENVIRONMENT) $(TESTS_ENVIRONMENT)
# A shell command to get the names of the tests scripts with any registered
# extension removed (i.e., equivalently, the names of the test logs, with
# the '.log' extension removed).  The result is saved in the shell variable
# '$bases'.  This honors runtime overriding of TESTS and TEST_LOGS.  Sadly,
# we cannot use something simpler, involving e.g., "$(TEST_LOGS:.log=)",
# since that might cause problem with VPATH rewrites for suffix-less tests.
# See also 'test-harness-vpath-rewrite.sh' and 'test-trs-basic.sh'.
am__set_TESTS_bases = \
  bases='$(TEST_LOGS)'; \
  bases=`for i in $$bases; do echo $$i; done | sed 's/\.log$$//'`; \
  bases=`echo $$bases`
RECHECK_LOGS = $(TEST_LOGS)
TEST_SUITE_LOG = test-suite.log
TEST_EXTENSIONS = @EXEEXT@ .test
LOG_DRIVER = $(SHELL) $(top_srcdir)/test-driver
LOG_COMPILE = $(LOG_COMPILER) $(AM_LOG_FLAGS) $(LOG_FLAGS)
am__set_b = \
  case '$@' in \
    */*) \
      case '$*' in \
        */*) b='$*';; \
          *) b=`echo '$@' | sed 's/\.log$$//'`; \
       esac;; \
    *) \
      b='$*';; \
  esac
am__test_logs1 = $(TESTS:=.log)
am__test_logs2 = $(am__test_logs1:@EXEEXT@.log=.log)
TEST_LOGS = $(am__test_logs2:.test.log=.log)
TEST_LOG_DRIVER = $(SHELL) $(top_srcdir)/test-driver
TEST_LOG_COMPILE = $(TEST_LOG_COMPILER) $(AM_TEST_LOG_FLAGS) \
	$(TEST_LOG_FLAGS)
DIST_SUBDIRS = $(SUBDIRS)
am__DIST_COMMON = $(srcdir)/Makefile.in $(top_srcdir)/depcomp \
	$(top_srcdir)/test-driver
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
am__relativize = \
  dir0=`pwd`; \
  sed_first='s,^\([^/]*\)/.*$$,\1,'; \
  sed_rest='s,^[^/]*/*,,'; \
  sed_last='s,^.*/\([^/]*\)$$,\1,'; \
  sed_butlast='s,/*[^/]*$$,,'; \
  while test -n "$$dir1"; do \
    first=`echo "$$dir1" | sed -e "$$sed_first"`; \
    if test "$$first" != "."; then \
      if test "$$first" = ".."; then \
        dir2=`echo "$$dir0" | sed -e "$$sed_last"`/"$$dir2"; \
        dir0=`echo "$$dir0" | sed -e "$$sed_butlast"`; \
      else \
        first2=`echo "$$dir2" | sed -e "$$sed_first"`; \
        if test "$$first2" = "$$first"; then \
          dir2=`echo "$$dir2" | sed -e "$$sed_rest"`; \
        else \
          dir2="../$$dir2"; \
        fi; \
        dir0="$$dir0"/"$$first"; \
      fi; \
    fi; \
    dir1=`echo "$$dir1" | sed -e "$$sed_rest"`; \
  done; \
  reldir="$$dir2"
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AM_DEFAULT_VERBOSITY = @AM_DEFAULT_VERBOSITY@
AR = @AR@
AS = @AS@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DLLTOOL = @DLLTOOL@
DSYMUTIL = @DSYMUTIL@
DUMPBIN = @DUMPBIN@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
FGREP = @FGREP@
FREETYPE2_CFLAGS = @FREETYPE2_CFLAGS@
FREETYPE2_LIBS = @FREETYPE2_LIBS@
GREP = @GREP@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LD = @LD@
LDFLAGS = @LDFLAGS@
LIBCAIRO_CFLAGS = @LIBCAIRO_CFLAGS@
LIBCAIRO_LIBS = @LIBCAIRO_LIBS@
LIBCURL_CFLAGS = @LIBCURL_CFLAGS@
LIBCURL_LIBS = @LIBCURL_LIBS@
LIBFREETYPE2_CFLAGS = @LIBFREETYPE2_CFLAGS@
LIBFREETYPE2_LIBS = @LIBFREETYPE2_LIBS@
LIBLZMA_CFLAGS = @LIBLZMA_CFLAGS@
LIBLZMA_LIBS = @LIBLZMA_LIBS@
LIBOBJS = @LIBOBJS@
LIBPNG_CFLAGS = @LIBPNG_CFLAGS@
LIBPNG_LIBS = @LIBPNG_LIBS@
LIBS = @LIBS@
LIBSPATIALITE_CFLAGS = @LIBSPATIALITE_CFLAGS@
LIBSPATIALITE_LIBS = @LIBSPATIALITE_LIBS@
LIBTOOL = @LIBTOOL@
LIBWEBP_CFLAGS = @LIBWEBP_CFLAGS@
LIBWEBP_LIBS = @LIBWEBP_LIBS@
LIBXML2_CFLAGS = @LIBXML2_CFLAGS@
LIBXML2_LIBS = @LIBXML2_LIBS@
LIPO = @LIPO@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
MAINT = @MAINT@
MAKEINFO = @MAKEINFO@
MANIFEST_TOOL = @MANIFEST_TOOL@
MKDIR_P = @MKDIR_P@
NM = @NM@
NMEDIT = @NMEDIT@
OBJDUMP = @OBJDUMP@
OBJEXT = @OBJEXT@
OTOOL = @OTOOL@
OTOOL64 = @OTOOL64@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_URL = @PACKAGE_URL@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
PKG_CONFIG = @PKG_CONFIG@
PKG_CONFIG_LIBDIR = @PKG_CONFIG_LIBDIR@
PKG_CONFIG_PATH = @PKG_CONFIG_PATH@
RANLIB = @RANLIB@
SED = @SED@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
VERSION = @VERSION@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_AR = @ac_ct_AR@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_DUMPBIN = @ac_ct_DUMPBIN@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
AM_CPPFLAGS = -I@srcdir@/../headers @LIBXML2_CFLAGS@
AM_LDFLAGS = -L../src -lrasterlite2 @LIBCAIRO_LIBS@ @LIBPNG_LIBS@ \
	@LIBWEBP_LIBS@ @LIBLZMA_LIBS@ @LIBSPATIALITE_LIBS@ \
	@LIBCURL_LIBS@ @LIBXML2_LIBS@  @LIBFREETYPE2_LIBS@ \
	$(GCOV_FLAGS)

TESTS = $(check_PROGRAMS)
MOSTLYCLEANFILES = *.gcna *.gcno *.gcda
EXTRA_DIST = jpeg1.jpg jpeg2.jpg png1.png mask1.png \
	webp_no_alpha.webp gif1.gif mono3t.tif mono3s.tif \
	mono4t.tif mono4s.tif gray-tiled.tif gray-striped.tif \
	plt-tiled.tif plt-striped.tif rgb-tiled.tif \
	rgb-striped.tif test_under_valgrind.sh \
	asprintf4win.h fnmatch_impl4win.h \
	fnmatch4win.h scandir4win.h \
	map_samples/usgs-gray/gray1.tif \
	map_samples/usgs-gray/gray2.tif \
	map_samples/usgs-rgb/rgb1.tif \
	map_samples/usgs-rgb/rgb2.tif \
	map_samples/usgs-srtm/srtm1.tif \
	map_samples/usgs-srtm/srtm2.tif \
	map_samples/usgs-nile-8/nile1-int8.tif \
	map_samples/usgs-nile-8/nile2-int8.tif \
	map_samples/usgs-nile-u8/nile1-uint8.tif \
	map_samples/usgs-nile-u8/nile2-uint8.tif \
	map_samples/usgs-nile-u16/nile1-uint16.tif \
	map_samples/usgs-nile-u16/nile2-uint16.tif \
	map_samples/usgs-nile-32/nile1-int32.tif \
	map_samples/usgs-nile-32/nile2-int32.tif \
	map_samples/usgs-nile-u32/nile1-uint32.tif \
	map_samples/usgs-nile-u32/nile2-uint32.tif \
	map_samples/usgs-nile-flt/nile1-flt.tif \
	map_samples/usgs-nile-flt/nile2-flt.tif \
	map_samples/usgs-nile-dbl/nile1-dbl.tif \
	map_samples/usgs-nile-dbl/nile2-dbl.tif \
	map_samples/usgs-indiana/indiana1.tif \
	map_samples/usgs-indiana/indiana2.tif \
	map_samples/ctrt/cap1.tif \
	map_samples/ctrt/cap2.tif \
	map_samples/ascii/ascii1.asc \
	map_samples/ascii/ascii2.asc \
	map_samples/trento-rgb/trento-rgb1.jpg \
	map_samples/trento-rgb/trento-rgb1.jgw \
	map_samples/trento-rgb/trento-rgb2.jpg \
	map_samples/trento-rgb/trento-rgb2.jgw \
	map_samples/trento-gray/trento-gray1.jpg \
	map_samples/trento-gray/trento-gray1.jgw \
	map_samples/trento-gray/trento-gray2.jpg \
	map_samples/trento-gray/trento-gray2.jgw \
	map_samples/orbview3-trieste/trieste1.tif \
	map_samples/orbview3-trieste/trieste2.tif \
	map_samples/tuscany-infrared/infrared1.tif \
	map_samples/tuscany-infrared/infrared2.tfw \
	map_samples/tuscany-infrared/infrared2.tif \
	map_samples/orbview3-orbetello/orbetello1.tif \
	map_samples/orbview3-orbetello/orbetello2.tfw \
	map_samples/orbview3-orbetello/orbetello2.tif \
	raster_symbolizer_1.xml raster_symbolizer_2.xml \
	raster_symbolizer_3.xml raster_symbolizer_4.xml \
	raster_symbolizer_5.xml raster_symbolizer_6.xml \
	srtm_categ.xml srtm_interp.xml srtm_brightness.xml \
	srtm_relief_25.xml srtm_relief_75.xml ir_gray.xml \
	ir_gray_gamma.xml ir_false_color1.xml \
	ir_false_color2.xml ir_false_color1_gamma.xml \
	ir_false_color2_gamma.xml rgb_histogram.xml \
	rgb_normalize.xml gray_gamma.xml gray_histogram.xml \
	gray_normalize.xml rgb_normalize2.xml ndvi.xml \
	rgb_histogram2.xml rgb_gamma.xml gray_normalize2.xml \
	gray_histogram2.xml gray_gamma2.xml group_style_1.xml \
	coverage_style.xml group_style_2.xml \
	symbolizers.sqlite bicycle.svg car_repair.svg \
	Car_Yellow.svg Circle_and_quadratic_bezier.svg \
	Coat_of_arms_Holy_See.svg doctors.svg fastfood.svg \
	Flag_of_the_United_Kingdom.svg Flag_of_the_United_States.svg \
	hospital.svg jewelry.svg motorcycle.svg \
	Negative_and_positive_skew_diagrams_(English).svg \
	Netherlands_roundel.svg pharmacy.svg photo.svg restaurant.svg \
	Roundel_of_the_Royal_Canadian_Air_Force_(1946-1965).svg \
	Roundel_of_the_Syrian_Air_Force.svg \
	Royal_Coat_of_Arms_of_the_United_Kingdom.svg \
	supermarket.svg tobacco.svg Cevennes2.jp2 Karla-BoldItalic.ttf

SUBDIRS = sql_stmt_security_tests sql_stmt_tests 
all: all-recursive

.SUFFIXES:
.SUFFIXES: .c .lo .log .o .obj .test .test$(EXEEXT) .trs
$(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu test/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu test/Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure: @MAINTAINER_MODE_TRUE@ $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4): @MAINTAINER_MODE_TRUE@ $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

clean-checkPROGRAMS:
	@list='$(check_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list

check_sql_stmt$(EXEEXT): $(check_sql_stmt_OBJECTS) $(check_sql_stmt_DEPENDENCIES) $(EXTRA_check_sql_stmt_DEPENDENCIES) 
	@rm -f check_sql_stmt$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(check_sql_stmt_OBJECTS) $(check_sql_stmt_LDADD) $(LIBS)

test1$(EXEEXT): $(test1_OBJECTS) $(test1_DEPENDENCIES) $(EXTRA_test1_DEPENDENCIES) 
	@rm -f test1$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test1_OBJECTS) $(test1_LDADD) $(LIBS)

test10$(EXEEXT): $(test10_OBJECTS) $(test10_DEPENDENCIES) $(EXTRA_test10_DEPENDENCIES) 
	@rm -f test10$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test10_OBJECTS) $(test10_LDADD) $(LIBS)

test11$(EXEEXT): $(test11_OBJECTS) $(test11_DEPENDENCIES) $(EXTRA_test11_DEPENDENCIES) 
	@rm -f test11$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test11_OBJECTS) $(test11_LDADD) $(LIBS)

test12$(EXEEXT): $(test12_OBJECTS) $(test12_DEPENDENCIES) $(EXTRA_test12_DEPENDENCIES) 
	@rm -f test12$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test12_OBJECTS) $(test12_LDADD) $(LIBS)

test13$(EXEEXT): $(test13_OBJECTS) $(test13_DEPENDENCIES) $(EXTRA_test13_DEPENDENCIES) 
	@rm -f test13$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test13_OBJECTS) $(test13_LDADD) $(LIBS)

test14$(EXEEXT): $(test14_OBJECTS) $(test14_DEPENDENCIES) $(EXTRA_test14_DEPENDENCIES) 
	@rm -f test14$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test14_OBJECTS) $(test14_LDADD) $(LIBS)

test15$(EXEEXT): $(test15_OBJECTS) $(test15_DEPENDENCIES) $(EXTRA_test15_DEPENDENCIES) 
	@rm -f test15$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test15_OBJECTS) $(test15_LDADD) $(LIBS)

test16$(EXEEXT): $(test16_OBJECTS) $(test16_DEPENDENCIES) $(EXTRA_test16_DEPENDENCIES) 
	@rm -f test16$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test16_OBJECTS) $(test16_LDADD) $(LIBS)

test17$(EXEEXT): $(test17_OBJECTS) $(test17_DEPENDENCIES) $(EXTRA_test17_DEPENDENCIES) 
	@rm -f test17$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test17_OBJECTS) $(test17_LDADD) $(LIBS)

test18$(EXEEXT): $(test18_OBJECTS) $(test18_DEPENDENCIES) $(EXTRA_test18_DEPENDENCIES) 
	@rm -f test18$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test18_OBJECTS) $(test18_LDADD) $(LIBS)

test19$(EXEEXT): $(test19_OBJECTS) $(test19_DEPENDENCIES) $(EXTRA_test19_DEPENDENCIES) 
	@rm -f test19$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test19_OBJECTS) $(test19_LDADD) $(LIBS)

test2$(EXEEXT): $(test2_OBJECTS) $(test2_DEPENDENCIES) $(EXTRA_test2_DEPENDENCIES) 
	@rm -f test2$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test2_OBJECTS) $(test2_LDADD) $(LIBS)

test20$(EXEEXT): $(test20_OBJECTS) $(test20_DEPENDENCIES) $(EXTRA_test20_DEPENDENCIES) 
	@rm -f test20$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test20_OBJECTS) $(test20_LDADD) $(LIBS)

test3$(EXEEXT): $(test3_OBJECTS) $(test3_DEPENDENCIES) $(EXTRA_test3_DEPENDENCIES) 
	@rm -f test3$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test3_OBJECTS) $(test3_LDADD) $(LIBS)

test4$(EXEEXT): $(test4_OBJECTS) $(test4_DEPENDENCIES) $(EXTRA_test4_DEPENDENCIES) 
	@rm -f test4$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test4_OBJECTS) $(test4_LDADD) $(LIBS)

test5$(EXEEXT): $(test5_OBJECTS) $(test5_DEPENDENCIES) $(EXTRA_test5_DEPENDENCIES) 
	@rm -f test5$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test5_OBJECTS) $(test5_LDADD) $(LIBS)

test6$(EXEEXT): $(test6_OBJECTS) $(test6_DEPENDENCIES) $(EXTRA_test6_DEPENDENCIES) 
	@rm -f test6$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test6_OBJECTS) $(test6_LDADD) $(LIBS)

test7$(EXEEXT): $(test7_OBJECTS) $(test7_DEPENDENCIES) $(EXTRA_test7_DEPENDENCIES) 
	@rm -f test7$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test7_OBJECTS) $(test7_LDADD) $(LIBS)

test8$(EXEEXT): $(test8_OBJECTS) $(test8_DEPENDENCIES) $(EXTRA_test8_DEPENDENCIES) 
	@rm -f test8$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test8_OBJECTS) $(test8_LDADD) $(LIBS)

test9$(EXEEXT): $(test9_OBJECTS) $(test9_DEPENDENCIES) $(EXTRA_test9_DEPENDENCIES) 
	@rm -f test9$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test9_OBJECTS) $(test9_LDADD) $(LIBS)

test_copy_rastercov$(EXEEXT): $(test_copy_rastercov_OBJECTS) $(test_copy_rastercov_DEPENDENCIES) $(EXTRA_test_copy_rastercov_DEPENDENCIES) 
	@rm -f test_copy_rastercov$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test_copy_rastercov_OBJECTS) $(test_copy_rastercov_LDADD) $(LIBS)

test_coverage$(EXEEXT): $(test_coverage_OBJECTS) $(test_coverage_DEPENDENCIES) $(EXTRA_test_coverage_DEPENDENCIES) 
	@rm -f test_coverage$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test_coverage_OBJECTS) $(test_coverage_LDADD) $(LIBS)

test_font$(EXEEXT): $(test_font_OBJECTS) $(test_font_DEPENDENCIES) $(EXTRA_test_font_DEPENDENCIES) 
	@rm -f test_font$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test_font_OBJECTS) $(test_font_LDADD) $(LIBS)

test_gif$(EXEEXT): $(test_gif_OBJECTS) $(test_gif_DEPENDENCIES) $(EXTRA_test_gif_DEPENDENCIES) 
	@rm -f test_gif$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test_gif_OBJECTS) $(test_gif_LDADD) $(LIBS)

test_line_symbolizer$(EXEEXT): $(test_line_symbolizer_OBJECTS) $(test_line_symbolizer_DEPENDENCIES) $(EXTRA_test_line_symbolizer_DEPENDENCIES) 
	@rm -f test_line_symbolizer$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test_line_symbolizer_OBJECTS) $(test_line_symbolizer_LDADD) $(LIBS)

test_load_wms$(EXEEXT): $(test_load_wms_OBJECTS) $(test_load_wms_DEPENDENCIES) $(EXTRA_test_load_wms_DEPENDENCIES) 
	@rm -f test_load_wms$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test_load_wms_OBJECTS) $(test_load_wms_LDADD) $(LIBS)

test_map_ascii$(EXEEXT): $(test_map_ascii_OBJECTS) $(test_map_ascii_DEPENDENCIES) $(EXTRA_test_map_ascii_DEPENDENCIES) 
	@rm -f test_map_ascii$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test_map_ascii_OBJECTS) $(test_map_ascii_LDADD) $(LIBS)

test_map_gray$(EXEEXT): $(test_map_gray_OBJECTS) $(test_map_gray_DEPENDENCIES) $(EXTRA_test_map_gray_DEPENDENCIES) 
	@rm -f test_map_gray$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test_map_gray_OBJECTS) $(test_map_gray_LDADD) $(LIBS)

test_map_indiana$(EXEEXT): $(test_map_indiana_OBJECTS) $(test_map_indiana_DEPENDENCIES) $(EXTRA_test_map_indiana_DEPENDENCIES) 
	@rm -f test_map_indiana$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test_map_indiana_OBJECTS) $(test_map_indiana_LDADD) $(LIBS)

test_map_infrared$(EXEEXT): $(test_map_infrared_OBJECTS) $(test_map_infrared_DEPENDENCIES) $(EXTRA_test_map_infrared_DEPENDENCIES) 
	@rm -f test_map_infrared$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test_map_infrared_OBJECTS) $(test_map_infrared_LDADD) $(LIBS)

test_map_mono$(EXEEXT): $(test_map_mono_OBJECTS) $(test_map_mono_DEPENDENCIES) $(EXTRA_test_map_mono_DEPENDENCIES) 
	@rm -f test_map_mono$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test_map_mono_OBJECTS) $(test_map_mono_LDADD) $(LIBS)

test_map_nile_32$(EXEEXT): $(test_map_nile_32_OBJECTS) $(test_map_nile_32_DEPENDENCIES) $(EXTRA_test_map_nile_32_DEPENDENCIES) 
	@rm -f test_map_nile_32$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test_map_nile_32_OBJECTS) $(test_map_nile_32_LDADD) $(LIBS)

test_map_nile_8$(EXEEXT): $(test_map_nile_8_OBJECTS) $(test_map_nile_8_DEPENDENCIES) $(EXTRA_test_map_nile_8_DEPENDENCIES) 
	@rm -f test_map_nile_8$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test_map_nile_8_OBJECTS) $(test_map_nile_8_LDADD) $(LIBS)

test_map_nile_dbl$(EXEEXT): $(test_map_nile_dbl_OBJECTS) $(test_map_nile_dbl_DEPENDENCIES) $(EXTRA_test_map_nile_dbl_DEPENDENCIES) 
	@rm -f test_map_nile_dbl$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test_map_nile_dbl_OBJECTS) $(test_map_nile_dbl_LDADD) $(LIBS)

test_map_nile_flt$(EXEEXT): $(test_map_nile_flt_OBJECTS) $(test_map_nile_flt_DEPENDENCIES) $(EXTRA_test_map_nile_flt_DEPENDENCIES) 
	@rm -f test_map_nile_flt$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test_map_nile_flt_OBJECTS) $(test_map_nile_flt_LDADD) $(LIBS)

test_map_nile_u16$(EXEEXT): $(test_map_nile_u16_OBJECTS) $(test_map_nile_u16_DEPENDENCIES) $(EXTRA_test_map_nile_u16_DEPENDENCIES) 
	@rm -f test_map_nile_u16$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test_map_nile_u16_OBJECTS) $(test_map_nile_u16_LDADD) $(LIBS)

test_map_nile_u32$(EXEEXT): $(test_map_nile_u32_OBJECTS) $(test_map_nile_u32_DEPENDENCIES) $(EXTRA_test_map_nile_u32_DEPENDENCIES) 
	@rm -f test_map_nile_u32$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test_map_nile_u32_OBJECTS) $(test_map_nile_u32_LDADD) $(LIBS)

test_map_nile_u8$(EXEEXT): $(test_map_nile_u8_OBJECTS) $(test_map_nile_u8_DEPENDENCIES) $(EXTRA_test_map_nile_u8_DEPENDENCIES) 
	@rm -f test_map_nile_u8$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test_map_nile_u8_OBJECTS) $(test_map_nile_u8_LDADD) $(LIBS)

test_map_noref$(EXEEXT): $(test_map_noref_OBJECTS) $(test_map_noref_DEPENDENCIES) $(EXTRA_test_map_noref_DEPENDENCIES) 
	@rm -f test_map_noref$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test_map_noref_OBJECTS) $(test_map_noref_LDADD) $(LIBS)

test_map_orbetello$(EXEEXT): $(test_map_orbetello_OBJECTS) $(test_map_orbetello_DEPENDENCIES) $(EXTRA_test_map_orbetello_DEPENDENCIES) 
	@rm -f test_map_orbetello$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test_map_orbetello_OBJECTS) $(test_map_orbetello_LDADD) $(LIBS)

test_map_rgb$(EXEEXT): $(test_map_rgb_OBJECTS) $(test_map_rgb_DEPENDENCIES) $(EXTRA_test_map_rgb_DEPENDENCIES) 
	@rm -f test_map_rgb$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test_map_rgb_OBJECTS) $(test_map_rgb_LDADD) $(LIBS)

test_map_srtm$(EXEEXT): $(test_map_srtm_OBJECTS) $(test_map_srtm_DEPENDENCIES) $(EXTRA_test_map_srtm_DEPENDENCIES) 
	@rm -f test_map_srtm$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test_map_srtm_OBJECTS) $(test_map_srtm_LDADD) $(LIBS)

test_map_trento$(EXEEXT): $(test_map_trento_OBJECTS) $(test_map_trento_DEPENDENCIES) $(EXTRA_test_map_trento_DEPENDENCIES) 
	@rm -f test_map_trento$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test_map_trento_OBJECTS) $(test_map_trento_LDADD) $(LIBS)

test_map_trieste$(EXEEXT): $(test_map_trieste_OBJECTS) $(test_map_trieste_DEPENDENCIES) $(EXTRA_test_map_trieste_DEPENDENCIES) 
	@rm -f test_map_trieste$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test_map_trieste_OBJECTS) $(test_map_trieste_LDADD) $(LIBS)

test_mask$(EXEEXT): $(test_mask_OBJECTS) $(test_mask_DEPENDENCIES) $(EXTRA_test_mask_DEPENDENCIES) 
	@rm -f test_mask$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test_mask_OBJECTS) $(test_mask_LDADD) $(LIBS)

test_openjpeg$(EXEEXT): $(test_openjpeg_OBJECTS) $(test_openjpeg_DEPENDENCIES) $(EXTRA_test_openjpeg_DEPENDENCIES) 
	@rm -f test_openjpeg$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test_openjpeg_OBJECTS) $(test_openjpeg_LDADD) $(LIBS)

test_paint$(EXEEXT): $(test_paint_OBJECTS) $(test_paint_DEPENDENCIES) $(EXTRA_test_paint_DEPENDENCIES) 
	@rm -f test_paint$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test_paint_OBJECTS) $(test_paint_LDADD) $(LIBS)

test_palette$(EXEEXT): $(test_palette_OBJECTS) $(test_palette_DEPENDENCIES) $(EXTRA_test_palette_DEPENDENCIES) 
	@rm -f test_palette$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test_palette_OBJECTS) $(test_palette_LDADD) $(LIBS)

test_point_symbolizer$(EXEEXT): $(test_point_symbolizer_OBJECTS) $(test_point_symbolizer_DEPENDENCIES) $(EXTRA_test_point_symbolizer_DEPENDENCIES) 
	@rm -f test_point_symbolizer$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test_point_symbolizer_OBJECTS) $(test_point_symbolizer_LDADD) $(LIBS)

test_polygon_symbolizer$(EXEEXT): $(test_polygon_symbolizer_OBJECTS) $(test_polygon_symbolizer_DEPENDENCIES) $(EXTRA_test_polygon_symbolizer_DEPENDENCIES) 
	@rm -f test_polygon_symbolizer$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test_polygon_symbolizer_OBJECTS) $(test_polygon_symbolizer_LDADD) $(LIBS)

test_raster$(EXEEXT): $(test_raster_OBJECTS) $(test_raster_DEPENDENCIES) $(EXTRA_test_raster_DEPENDENCIES) 
	@rm -f test_raster$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test_raster_OBJECTS) $(test_raster_LDADD) $(LIBS)

test_raster_symbolizer$(EXEEXT): $(test_raster_symbolizer_OBJECTS) $(test_raster_symbolizer_DEPENDENCIES) $(EXTRA_test_raster_symbolizer_DEPENDENCIES) 
	@rm -f test_raster_symbolizer$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test_raster_symbolizer_OBJECTS) $(test_raster_symbolizer_LDADD) $(LIBS)

test_raw$(EXEEXT): $(test_raw_OBJECTS) $(test_raw_DEPENDENCIES) $(EXTRA_test_raw_DEPENDENCIES) 
	@rm -f test_raw$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test_raw_OBJECTS) $(test_raw_LDADD) $(LIBS)

test_section$(EXEEXT): $(test_section_OBJECTS) $(test_section_DEPENDENCIES) $(EXTRA_test_section_DEPENDENCIES) 
	@rm -f test_section$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test_section_OBJECTS) $(test_section_LDADD) $(LIBS)

test_svg$(EXEEXT): $(test_svg_OBJECTS) $(test_svg_DEPENDENCIES) $(EXTRA_test_svg_DEPENDENCIES) 
	@rm -f test_svg$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test_svg_OBJECTS) $(test_svg_LDADD) $(LIBS)

test_text_symbolizer$(EXEEXT): $(test_text_symbolizer_OBJECTS) $(test_text_symbolizer_DEPENDENCIES) $(EXTRA_test_text_symbolizer_DEPENDENCIES) 
	@rm -f test_text_symbolizer$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test_text_symbolizer_OBJECTS) $(test_text_symbolizer_LDADD) $(LIBS)

test_tifin$(EXEEXT): $(test_tifin_OBJECTS) $(test_tifin_DEPENDENCIES) $(EXTRA_test_tifin_DEPENDENCIES) 
	@rm -f test_tifin$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test_tifin_OBJECTS) $(test_tifin_LDADD) $(LIBS)

test_vectors$(EXEEXT): $(test_vectors_OBJECTS) $(test_vectors_DEPENDENCIES) $(EXTRA_test_vectors_DEPENDENCIES) 
	@rm -f test_vectors$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test_vectors_OBJECTS) $(test_vectors_LDADD) $(LIBS)

test_webp$(EXEEXT): $(test_webp_OBJECTS) $(test_webp_DEPENDENCIES) $(EXTRA_test_webp_DEPENDENCIES) 
	@rm -f test_webp$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test_webp_OBJECTS) $(test_webp_LDADD) $(LIBS)

test_wms1$(EXEEXT): $(test_wms1_OBJECTS) $(test_wms1_DEPENDENCIES) $(EXTRA_test_wms1_DEPENDENCIES) 
	@rm -f test_wms1$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test_wms1_OBJECTS) $(test_wms1_LDADD) $(LIBS)

test_wms2$(EXEEXT): $(test_wms2_OBJECTS) $(test_wms2_DEPENDENCIES) $(EXTRA_test_wms2_DEPENDENCIES) 
	@rm -f test_wms2$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test_wms2_OBJECTS) $(test_wms2_LDADD) $(LIBS)

test_wr_tiff$(EXEEXT): $(test_wr_tiff_OBJECTS) $(test_wr_tiff_DEPENDENCIES) $(EXTRA_test_wr_tiff_DEPENDENCIES) 
	@rm -f test_wr_tiff$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test_wr_tiff_OBJECTS) $(test_wr_tiff_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/check_sql_stmt.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test1.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test10.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test11.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test12.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test13.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test14.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test15.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test16.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test17.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test18.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test19.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test2.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test20.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test3.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test4.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test5.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test6.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test7.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test8.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test9.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_copy_rastercov.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_coverage.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_font.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_gif.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_line_symbolizer.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_load_wms.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_map_ascii.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_map_gray.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_map_indiana.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_map_infrared.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_map_mono.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_map_nile_32.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_map_nile_8.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_map_nile_dbl.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_map_nile_flt.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_map_nile_u16.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_map_nile_u32.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_map_nile_u8.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_map_noref.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_map_orbetello.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_map_rgb.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_map_srtm.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_map_trento.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_map_trieste.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_mask.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_openjpeg.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_paint.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_palette.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_point_symbolizer.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_polygon_symbolizer.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_raster.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_raster_symbolizer.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_raw.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_section.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_svg.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_text_symbolizer.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_tifin.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_vectors.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_webp.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_wms1.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_wms2.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_wr_tiff.Po@am__quote@

.c.o:
@am__fastdepCC_TRUE@	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(COMPILE) -c -o $@ $<

.c.obj:
@am__fastdepCC_TRUE@	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.c.lo:
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LTCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LTCOMPILE) -c -o $@ $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

# This directory's subdirectories are mostly independent; you can cd
# into them and run 'make' without going through this Makefile.
# To change the values of 'make' variables: instead of editing Makefiles,
# (1) if the variable is set in 'config.status', edit 'config.status'
#     (which will cause the Makefiles to be regenerated when you run 'make');
# (2) otherwise, pass the desired values on the 'make' command line.
$(am__recursive_targets):
	@fail=; \
	if $(am__make_keepgoing); then \
	  failcom='fail=yes'; \
	else \
	  failcom='exit 1'; \
	fi; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	case "$@" in \
	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
	  *) list='$(SUBDIRS)' ;; \
	esac; \
	for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-recursive
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	if ($(ETAGS) --etags-include --version) >/dev/null 2>&1; then \
	  include_option=--etags-include; \
	  empty_fix=.; \
	else \
	  include_option=--include; \
	  empty_fix=; \
	fi; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test ! -f $$subdir/TAGS || \
	      set "$$@" "$$include_option=$$here/$$subdir/TAGS"; \
	  fi; \
	done; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-recursive

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-recursive

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

# Recover from deleted '.trs' file; this should ensure that
# "rm -f foo.log; make foo.trs" re-run 'foo.test', and re-create
# both 'foo.log' and 'foo.trs'.  Break the recipe in two subshells
# to avoid problems with "make -n".
.log.trs:
	rm -f $< $@
	$(MAKE) $(AM_MAKEFLAGS) $<

# Leading 'am--fnord' is there to ensure the list of targets does not
# expand to empty, as could happen e.g. with make check TESTS=''.
am--fnord $(TEST_LOGS) $(TEST_LOGS:.log=.trs): $(am__force_recheck)
am--force-recheck:
	@:

$(TEST_SUITE_LOG): $(TEST_LOGS)
	@$(am__set_TESTS_bases); \
	am__f_ok () { test -f "$$1" && test -r "$$1"; }; \
	redo_bases=`for i in $$bases; do \
	              am__f_ok $$i.trs && am__f_ok $$i.log || echo $$i; \
	            done`; \
	if test -n "$$redo_bases"; then \
	  redo_logs=`for i in $$redo_bases; do echo $$i.log; done`; \
	  redo_results=`for i in $$redo_bases; do echo $$i.trs; done`; \
	  if $(am__make_dryrun); then :; else \
	    rm -f $$redo_logs && rm -f $$redo_results || exit 1; \
	  fi; \
	fi; \
	if test -n "$$am__remaking_logs"; then \
	  echo "fatal: making $(TEST_SUITE_LOG): possible infinite" \
	       "recursion detected" >&2; \
	elif test -n "$$redo_logs"; then \
	  am__remaking_logs=yes $(MAKE) $(AM_MAKEFLAGS) $$redo_logs; \
	fi; \
	if $(am__make_dryrun); then :; else \
	  st=0;  \
	  errmsg="fatal: making $(TEST_SUITE_LOG): failed to create"; \
	  for i in $$redo_bases; do \
	    test -f $$i.trs && test -r $$i.trs \
	      || { echo "$$errmsg $$i.trs" >&2; st=1; }; \
	    test -f $$i.log && test -r $$i.log \
	      || { echo "$$errmsg $$i.log" >&2; st=1; }; \
	  done; \
	  test $$st -eq 0 || exit 1; \
	fi
	@$(am__sh_e_setup); $(am__tty_colors); $(am__set_TESTS_bases); \
	ws='[ 	]'; \
	results=`for b in $$bases; do echo $$b.trs; done`; \
	test -n "$$results" || results=/dev/null; \
	all=`  grep "^$$ws*:test-result:"           $$results | wc -l`; \
	pass=` grep "^$$ws*:test-result:$$ws*PASS"  $$results | wc -l`; \
	fail=` grep "^$$ws*:test-result:$$ws*FAIL"  $$results | wc -l`; \
	skip=` grep "^$$ws*:test-result:$$ws*SKIP"  $$results | wc -l`; \
	xfail=`grep "^$$ws*:test-result:$$ws*XFAIL" $$results | wc -l`; \
	xpass=`grep "^$$ws*:test-result:$$ws*XPASS" $$results | wc -l`; \
	error=`grep "^$$ws*:test-result:$$ws*ERROR" $$results | wc -l`; \
	if test `expr $$fail + $$xpass + $$error` -eq 0; then \
	  success=true; \
	else \
	  success=false; \
	fi; \
	br='==================='; br=$$br$$br$$br$$br; \
	result_count () \
	{ \
	    if test x"$$1" = x"--maybe-color"; then \
	      maybe_colorize=yes; \
	    elif test x"$$1" = x"--no-color"; then \
	      maybe_colorize=no; \
	    else \
	      echo "$@: invalid 'result_count' usage" >&2; exit 4; \
	    fi; \
	    shift; \
	    desc=$$1 count=$$2; \
	    if test $$maybe_colorize = yes && test $$count -gt 0; then \
	      color_start=$$3 color_end=$$std; \
	    else \
	      color_start= color_end=; \
	    fi; \
	    echo "$${color_start}# $$desc $$count$${color_end}"; \
	}; \
	create_testsuite_report () \
	{ \
	  result_count $$1 "TOTAL:" $$all   "$$brg"; \
	  result_count $$1 "PASS: " $$pass  "$$grn"; \
	  result_count $$1 "SKIP: " $$skip  "$$blu"; \
	  result_count $$1 "XFAIL:" $$xfail "$$lgn"; \
	  result_count $$1 "FAIL: " $$fail  "$$red"; \
	  result_count $$1 "XPASS:" $$xpass "$$red"; \
	  result_count $$1 "ERROR:" $$error "$$mgn"; \
	}; \
	{								\
	  echo "$(PACKAGE_STRING): $(subdir)/$(TEST_SUITE_LOG)" |	\
	    $(am__rst_title);						\
	  create_testsuite_report --no-color;				\
	  echo;								\
	  echo ".. contents:: :depth: 2";				\
	  echo;								\
	  for b in $$bases; do echo $$b; done				\
	    | $(am__create_global_log);					\
	} >$(TEST_SUITE_LOG).tmp || exit 1;				\
	mv $(TEST_SUITE_LOG).tmp $(TEST_SUITE_LOG);			\
	if $$success; then						\
	  col="$$grn";							\
	 else								\
	  col="$$red";							\
	  test x"$$VERBOSE" = x || cat $(TEST_SUITE_LOG);		\
	fi;								\
	echo "$${col}$$br$${std}"; 					\
	echo "$${col}Testsuite summary for $(PACKAGE_STRING)$${std}";	\
	echo "$${col}$$br$${std}"; 					\
	create_testsuite_report --maybe-color;				\
	echo "$$col$$br$$std";						\
	if $$success; then :; else					\
	  echo "$${col}See $(subdir)/$(TEST_SUITE_LOG)$${std}";		\
	  if test -n "$(PACKAGE_BUGREPORT)"; then			\
	    echo "$${col}Please report to $(PACKAGE_BUGREPORT)$${std}";	\
	  fi;								\
	  echo "$$col$$br$$std";					\
	fi;								\
	$$success || exit 1

check-TESTS:
	@list='$(RECHECK_LOGS)';           test -z "$$list" || rm -f $$list
	@list='$(RECHECK_LOGS:.log=.trs)'; test -z "$$list" || rm -f $$list
	@test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)
	@set +e; $(am__set_TESTS_bases); \
	log_list=`for i in $$bases; do echo $$i.log; done`; \
	trs_list=`for i in $$bases; do echo $$i.trs; done`; \
	log_list=`echo $$log_list`; trs_list=`echo $$trs_list`; \
	$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_LOG) TEST_LOGS="$$log_list"; \
	exit $$?;
recheck: all $(check_PROGRAMS)
	@test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)
	@set +e; $(am__set_TESTS_bases); \
	bases=`for i in $$bases; do echo $$i; done \
	         | $(am__list_recheck_tests)` || exit 1; \
	log_list=`for i in $$bases; do echo $$i.log; done`; \
	log_list=`echo $$log_list`; \
	$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_LOG) \
	        am__force_recheck=am--force-recheck \
	        TEST_LOGS="$$log_list"; \
	exit $$?
test_coverage.log: test_coverage$(EXEEXT)
	@p='test_coverage$(EXEEXT)'; \
	b='test_coverage'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_palette.log: test_palette$(EXEEXT)
	@p='test_palette$(EXEEXT)'; \
	b='test_palette'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_section.log: test_section$(EXEEXT)
	@p='test_section$(EXEEXT)'; \
	b='test_section'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_raster.log: test_raster$(EXEEXT)
	@p='test_raster$(EXEEXT)'; \
	b='test_raster'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_mask.log: test_mask$(EXEEXT)
	@p='test_mask$(EXEEXT)'; \
	b='test_mask'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_webp.log: test_webp$(EXEEXT)
	@p='test_webp$(EXEEXT)'; \
	b='test_webp'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_gif.log: test_gif$(EXEEXT)
	@p='test_gif$(EXEEXT)'; \
	b='test_gif'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test1.log: test1$(EXEEXT)
	@p='test1$(EXEEXT)'; \
	b='test1'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test2.log: test2$(EXEEXT)
	@p='test2$(EXEEXT)'; \
	b='test2'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test3.log: test3$(EXEEXT)
	@p='test3$(EXEEXT)'; \
	b='test3'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test4.log: test4$(EXEEXT)
	@p='test4$(EXEEXT)'; \
	b='test4'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test5.log: test5$(EXEEXT)
	@p='test5$(EXEEXT)'; \
	b='test5'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test6.log: test6$(EXEEXT)
	@p='test6$(EXEEXT)'; \
	b='test6'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test7.log: test7$(EXEEXT)
	@p='test7$(EXEEXT)'; \
	b='test7'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test8.log: test8$(EXEEXT)
	@p='test8$(EXEEXT)'; \
	b='test8'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test9.log: test9$(EXEEXT)
	@p='test9$(EXEEXT)'; \
	b='test9'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test10.log: test10$(EXEEXT)
	@p='test10$(EXEEXT)'; \
	b='test10'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test11.log: test11$(EXEEXT)
	@p='test11$(EXEEXT)'; \
	b='test11'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test12.log: test12$(EXEEXT)
	@p='test12$(EXEEXT)'; \
	b='test12'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test13.log: test13$(EXEEXT)
	@p='test13$(EXEEXT)'; \
	b='test13'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test14.log: test14$(EXEEXT)
	@p='test14$(EXEEXT)'; \
	b='test14'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test15.log: test15$(EXEEXT)
	@p='test15$(EXEEXT)'; \
	b='test15'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test16.log: test16$(EXEEXT)
	@p='test16$(EXEEXT)'; \
	b='test16'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test17.log: test17$(EXEEXT)
	@p='test17$(EXEEXT)'; \
	b='test17'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test18.log: test18$(EXEEXT)
	@p='test18$(EXEEXT)'; \
	b='test18'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test19.log: test19$(EXEEXT)
	@p='test19$(EXEEXT)'; \
	b='test19'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test20.log: test20$(EXEEXT)
	@p='test20$(EXEEXT)'; \
	b='test20'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_tifin.log: test_tifin$(EXEEXT)
	@p='test_tifin$(EXEEXT)'; \
	b='test_tifin'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_wr_tiff.log: test_wr_tiff$(EXEEXT)
	@p='test_wr_tiff$(EXEEXT)'; \
	b='test_wr_tiff'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_wms1.log: test_wms1$(EXEEXT)
	@p='test_wms1$(EXEEXT)'; \
	b='test_wms1'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_wms2.log: test_wms2$(EXEEXT)
	@p='test_wms2$(EXEEXT)'; \
	b='test_wms2'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_paint.log: test_paint$(EXEEXT)
	@p='test_paint$(EXEEXT)'; \
	b='test_paint'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
check_sql_stmt.log: check_sql_stmt$(EXEEXT)
	@p='check_sql_stmt$(EXEEXT)'; \
	b='check_sql_stmt'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_map_nile_8.log: test_map_nile_8$(EXEEXT)
	@p='test_map_nile_8$(EXEEXT)'; \
	b='test_map_nile_8'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_map_nile_u8.log: test_map_nile_u8$(EXEEXT)
	@p='test_map_nile_u8$(EXEEXT)'; \
	b='test_map_nile_u8'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_map_nile_u16.log: test_map_nile_u16$(EXEEXT)
	@p='test_map_nile_u16$(EXEEXT)'; \
	b='test_map_nile_u16'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_map_nile_32.log: test_map_nile_32$(EXEEXT)
	@p='test_map_nile_32$(EXEEXT)'; \
	b='test_map_nile_32'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_map_nile_u32.log: test_map_nile_u32$(EXEEXT)
	@p='test_map_nile_u32$(EXEEXT)'; \
	b='test_map_nile_u32'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_map_nile_flt.log: test_map_nile_flt$(EXEEXT)
	@p='test_map_nile_flt$(EXEEXT)'; \
	b='test_map_nile_flt'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_map_nile_dbl.log: test_map_nile_dbl$(EXEEXT)
	@p='test_map_nile_dbl$(EXEEXT)'; \
	b='test_map_nile_dbl'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_map_ascii.log: test_map_ascii$(EXEEXT)
	@p='test_map_ascii$(EXEEXT)'; \
	b='test_map_ascii'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_map_rgb.log: test_map_rgb$(EXEEXT)
	@p='test_map_rgb$(EXEEXT)'; \
	b='test_map_rgb'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_map_gray.log: test_map_gray$(EXEEXT)
	@p='test_map_gray$(EXEEXT)'; \
	b='test_map_gray'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_map_srtm.log: test_map_srtm$(EXEEXT)
	@p='test_map_srtm$(EXEEXT)'; \
	b='test_map_srtm'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_map_mono.log: test_map_mono$(EXEEXT)
	@p='test_map_mono$(EXEEXT)'; \
	b='test_map_mono'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_map_indiana.log: test_map_indiana$(EXEEXT)
	@p='test_map_indiana$(EXEEXT)'; \
	b='test_map_indiana'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_load_wms.log: test_load_wms$(EXEEXT)
	@p='test_load_wms$(EXEEXT)'; \
	b='test_load_wms'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_map_noref.log: test_map_noref$(EXEEXT)
	@p='test_map_noref$(EXEEXT)'; \
	b='test_map_noref'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_map_trento.log: test_map_trento$(EXEEXT)
	@p='test_map_trento$(EXEEXT)'; \
	b='test_map_trento'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_map_trieste.log: test_map_trieste$(EXEEXT)
	@p='test_map_trieste$(EXEEXT)'; \
	b='test_map_trieste'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_map_infrared.log: test_map_infrared$(EXEEXT)
	@p='test_map_infrared$(EXEEXT)'; \
	b='test_map_infrared'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_map_orbetello.log: test_map_orbetello$(EXEEXT)
	@p='test_map_orbetello$(EXEEXT)'; \
	b='test_map_orbetello'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_raster_symbolizer.log: test_raster_symbolizer$(EXEEXT)
	@p='test_raster_symbolizer$(EXEEXT)'; \
	b='test_raster_symbolizer'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_svg.log: test_svg$(EXEEXT)
	@p='test_svg$(EXEEXT)'; \
	b='test_svg'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_raw.log: test_raw$(EXEEXT)
	@p='test_raw$(EXEEXT)'; \
	b='test_raw'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_openjpeg.log: test_openjpeg$(EXEEXT)
	@p='test_openjpeg$(EXEEXT)'; \
	b='test_openjpeg'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_line_symbolizer.log: test_line_symbolizer$(EXEEXT)
	@p='test_line_symbolizer$(EXEEXT)'; \
	b='test_line_symbolizer'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_polygon_symbolizer.log: test_polygon_symbolizer$(EXEEXT)
	@p='test_polygon_symbolizer$(EXEEXT)'; \
	b='test_polygon_symbolizer'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_point_symbolizer.log: test_point_symbolizer$(EXEEXT)
	@p='test_point_symbolizer$(EXEEXT)'; \
	b='test_point_symbolizer'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_text_symbolizer.log: test_text_symbolizer$(EXEEXT)
	@p='test_text_symbolizer$(EXEEXT)'; \
	b='test_text_symbolizer'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_vectors.log: test_vectors$(EXEEXT)
	@p='test_vectors$(EXEEXT)'; \
	b='test_vectors'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_font.log: test_font$(EXEEXT)
	@p='test_font$(EXEEXT)'; \
	b='test_font'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_copy_rastercov.log: test_copy_rastercov$(EXEEXT)
	@p='test_copy_rastercov$(EXEEXT)'; \
	b='test_copy_rastercov'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
.test.log:
	@p='$<'; \
	$(am__set_b); \
	$(am__check_pre) $(TEST_LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_TEST_LOG_DRIVER_FLAGS) $(TEST_LOG_DRIVER_FLAGS) -- $(TEST_LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
@am__EXEEXT_TRUE@.test$(EXEEXT).log:
@am__EXEEXT_TRUE@	@p='$<'; \
@am__EXEEXT_TRUE@	$(am__set_b); \
@am__EXEEXT_TRUE@	$(am__check_pre) $(TEST_LOG_DRIVER) --test-name "$$f" \
@am__EXEEXT_TRUE@	--log-file $$b.log --trs-file $$b.trs \
@am__EXEEXT_TRUE@	$(am__common_driver_flags) $(AM_TEST_LOG_DRIVER_FLAGS) $(TEST_LOG_DRIVER_FLAGS) -- $(TEST_LOG_COMPILE) \
@am__EXEEXT_TRUE@	"$$tst" $(AM_TESTS_FD_REDIRECT)

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
	@list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    $(am__make_dryrun) \
	      || test -d "$(distdir)/$$subdir" \
	      || $(MKDIR_P) "$(distdir)/$$subdir" \
	      || exit 1; \
	    dir1=$$subdir; dir2="$(distdir)/$$subdir"; \
	    $(am__relativize); \
	    new_distdir=$$reldir; \
	    dir1=$$subdir; dir2="$(top_distdir)"; \
	    $(am__relativize); \
	    new_top_distdir=$$reldir; \
	    echo " (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) top_distdir="$$new_top_distdir" distdir="$$new_distdir" \\"; \
	    echo "     am__remove_distdir=: am__skip_length_check=: am__skip_mode_fix=: distdir)"; \
	    ($(am__cd) $$subdir && \
	      $(MAKE) $(AM_MAKEFLAGS) \
	        top_distdir="$$new_top_distdir" \
	        distdir="$$new_distdir" \
		am__remove_distdir=: \
		am__skip_length_check=: \
		am__skip_mode_fix=: \
	        distdir) \
	      || exit 1; \
	  fi; \
	done
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) $(check_PROGRAMS)
	$(MAKE) $(AM_MAKEFLAGS) check-TESTS
check: check-recursive
all-am: Makefile
installdirs: installdirs-recursive
installdirs-am:
install: install-recursive
install-exec: install-exec-recursive
install-data: install-data-recursive
uninstall: uninstall-recursive

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-recursive
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:
	-test -z "$(MOSTLYCLEANFILES)" || rm -f $(MOSTLYCLEANFILES)
	-test -z "$(TEST_LOGS)" || rm -f $(TEST_LOGS)
	-test -z "$(TEST_LOGS:.log=.trs)" || rm -f $(TEST_LOGS:.log=.trs)
	-test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-recursive

clean-am: clean-checkPROGRAMS clean-generic clean-libtool \
	mostlyclean-am

distclean: distclean-recursive
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-recursive

dvi-am:

html: html-recursive

html-am:

info: info-recursive

info-am:

install-data-am:

install-dvi: install-dvi-recursive

install-dvi-am:

install-exec-am:

install-html: install-html-recursive

install-html-am:

install-info: install-info-recursive

install-info-am:

install-man:

install-pdf: install-pdf-recursive

install-pdf-am:

install-ps: install-ps-recursive

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-recursive
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-recursive

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-recursive

pdf-am:

ps: ps-recursive

ps-am:

uninstall-am:

.MAKE: $(am__recursive_targets) check-am install-am install-strip

.PHONY: $(am__recursive_targets) CTAGS GTAGS TAGS all all-am check \
	check-TESTS check-am clean clean-checkPROGRAMS clean-generic \
	clean-libtool cscopelist-am ctags ctags-am distclean \
	distclean-compile distclean-generic distclean-libtool \
	distclean-tags distdir dvi dvi-am html html-am info info-am \
	install install-am install-data install-data-am install-dvi \
	install-dvi-am install-exec install-exec-am install-html \
	install-html-am install-info install-info-am install-man \
	install-pdf install-pdf-am install-ps install-ps-am \
	install-strip installcheck installcheck-am installdirs \
	installdirs-am maintainer-clean maintainer-clean-generic \
	mostlyclean mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool pdf pdf-am ps ps-am recheck tags tags-am \
	uninstall uninstall-am

.PRECIOUS: Makefile


# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
